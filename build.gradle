buildscript {
    ext {
        springBootVersion = '1.3.0.M1'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

        //Added docker plugin
        classpath('se.transmode.gradle:gradle-docker:1.2')
//        classpath 'com.bmuschko:gradle-docker-plugin:2.4'

    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
    baseName = 'demo'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-jdbc")

    // Including the thymeleaf starter
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")


    //Including tomcat
    compile("org.springframework.boot:spring-boot-starter-tomcat")

    //Including HATEOS
    compile("org.springframework.hateoas:spring-hateoas")

    compile("org.springframework.boot:spring-boot-devtools")

    runtime("com.h2database:h2")

    testCompile("org.springframework.boot:spring-boot-starter-test") 
}

springBoot {
    executable = true
}

//Docker Specific config
group = 'melbjvm'
apply plugin: 'docker'

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

//apply plugin: 'com.bmuschko.docker-remote-api'
//
//import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
//
//task copyJar(type: Copy) {
//    dependsOn   'jar'
//    from        jar
//    into        'build/docker'
//}
//
//task copyDockerFile(type: Copy) {
//    from        'src/docker/DockerFile'
//    into        'build/docker'
//}
//
//task buildDockerImage(type: DockerBuildImage) {
//    dependsOn   copyJar, copyDockerFile
//    inputDir = file('build/docker')
//    tag = 'melbjvm/demo'
//}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
